val aName = "Front Porch Overhead"
rule "Front Porch Overhead"
when
  Item FrontPorchOverhead received command
then
    var Number brightness = receivedCommand;
    val colors = newArrayList()
        logWarn("Bigboxer23", aName + ": " + brightness)
        if (FrontPorchRetro.state == ON)
        {
            logWarn("Bigboxer23", aName + ": Retro")
            colors.add(newArrayList(10,73,87))
            colors.add(newArrayList(29,48,91))
            colors.add(newArrayList(37,24,94))
            colors.add(newArrayList(155,18,67))
            colors.add(newArrayList(183,43,53))
            colors.add(newArrayList(227,53,34))
        } /*else if(FrontPorchRainbow.state == ON) {
            logWarn("Bigboxer23", aName + ": Rainbow")
            colors.add(newArrayList(0,100,80))
            colors.add(newArrayList(32,100,80))
            colors.add(newArrayList(68,100,92))
            colors.add(newArrayList(155,100,92))
            colors.add(newArrayList(212,92,92))
            colors.add(newArrayList(284,96,100))
        } */ else if(FrontPorchThanksgiving.state == ON) {
            logWarn("Bigboxer23", aName + ": Thanksgiving")
            colors.add(newArrayList(26,100,100))
            colors.add(newArrayList(37,64,52))
            colors.add(newArrayList(27,87,53))
            colors.add(newArrayList(15,69,56))
            colors.add(newArrayList(35,100,100))
            colors.add(newArrayList(19,100,74))
        } else if(FrontPorchHalloween.state == ON) {
          logWarn("Bigboxer23", aName + ": Halloween")
          colors.add(newArrayList(19,100,100))
          colors.add(newArrayList(273,65,90))
          colors.add(newArrayList(19,100,100))
          colors.add(newArrayList(271,85,90))
          colors.add(newArrayList(19,100,100))
          colors.add(newArrayList(272,77,90))
        } else if(FrontPorchChristmas.state == ON) {
          logWarn("Bigboxer23", aName + ": Christmas")
            colors.add(newArrayList(225,20,52))
            colors.add(newArrayList(120,100,100))
            colors.add(newArrayList(0,100,100))
            colors.add(newArrayList(120,100,100))
            colors.add(newArrayList(0,100,100))
            colors.add(newArrayList(225,20,52))
        } else if(FrontPorchPride.state == ON) {
            logWarn("Bigboxer23", aName + ": Pride")
            colors.add(newArrayList(0,100,100))
            colors.add(newArrayList(358,65,100))
            colors.add(newArrayList(44,77,100))
            colors.add(newArrayList(83,81,79))
            colors.add(newArrayList(203,87,77))
            colors.add(newArrayList(265,48,58))
         } else if(FrontPorchValentines.state == ON) {
          logWarn("Bigboxer23", aName + ": Valentines")
            colors.add(newArrayList(352,12,100))
            colors.add(newArrayList(358,65,100))
            colors.add(newArrayList(342,35,100))
            colors.add(newArrayList(341,64,100))
            colors.add(newArrayList(342,33,100))
            colors.add(newArrayList(342,33,100))
         } else if(FrontPorchEaster.state == ON) {
            logWarn("Bigboxer23", aName + ": Easter")
            colors.add(newArrayList(144,15,100))
            colors.add(newArrayList(278,22,100))
            colors.add(newArrayList(332,40,100))
            colors.add(newArrayList(54,25,100))
            colors.add(newArrayList(200,32,100))
            colors.add(newArrayList(144,15,100))
         } else if(FrontPorchFourth.state == ON) {
	        logWarn("Bigboxer23", aName + ": 4th of July")
            colors.add(newArrayList(0,0,100))
            colors.add(newArrayList(356,73,65))
            colors.add(newArrayList(241,48,50))
            colors.add(newArrayList(0,0,100))
            colors.add(newArrayList(356,73,65))
            colors.add(newArrayList(241,48,50))
	     } else {
	        logWarn("Bigboxer23", aName + ": Normal")
            colors.add(newArrayList(44,65,100))
            colors.add(newArrayList(44,65,100))
            colors.add(newArrayList(44,65,100))
            colors.add(newArrayList(44,65,100))
            colors.add(newArrayList(44,65,100))
            colors.add(newArrayList(44,65,100))
        }
        FrontPorch1.sendCommand(new HSBType(new DecimalType(colors.get(0).get(0)), new PercentType(colors.get(0).get(1)), new PercentType((brightness.floatValue() * (colors.get(0).get(2) / 100f)).intValue())))
        FrontPorch2.sendCommand(new HSBType(new DecimalType(colors.get(1).get(0)), new PercentType(colors.get(1).get(1)), new PercentType((brightness.floatValue() * (colors.get(1).get(2) / 100f)).intValue())))
        FrontPorch3.sendCommand(new HSBType(new DecimalType(colors.get(2).get(0)), new PercentType(colors.get(2).get(1)), new PercentType((brightness.floatValue() * (colors.get(2).get(2) / 100f)).intValue())))
        FrontPorch5.sendCommand(new HSBType(new DecimalType(colors.get(3).get(0)), new PercentType(colors.get(3).get(1)), new PercentType((brightness.floatValue() * (colors.get(3).get(2) / 100f)).intValue())))
        FrontPorch6.sendCommand(new HSBType(new DecimalType(colors.get(4).get(0)), new PercentType(colors.get(4).get(1)), new PercentType((brightness.floatValue() * (colors.get(4).get(2) / 100f)).intValue())))
        FrontPorch7.sendCommand(new HSBType(new DecimalType(colors.get(5).get(0)), new PercentType(colors.get(5).get(1)), new PercentType((brightness.floatValue() * (colors.get(5).get(2) / 100f)).intValue())))

end